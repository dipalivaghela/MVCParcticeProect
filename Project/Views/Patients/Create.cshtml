@using Domain.Enums;
@model Domain.Model.Dtos.PatientViewModel

@{
    ViewData["Title"] = "Create";
}

<h4>Patient</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label for="Gender">Gender:</label>
               <select class="form-control" id="Gender" name="Gender" required>
                   <option value="">-- Select Gender ---</option>
                    @foreach (Gender gender in Enum.GetValues(typeof(Gender)))
                    {
                        <option value="@(gender)">@gender</option>
                    }
                </select>
            </div>

            <div class="form-group">
                <label asp-for="DateOfBirth" class="control-label"></label>
                <input asp-for="DateOfBirth" class="form-control" />
                <span asp-validation-for="DateOfBirth" class="text-danger"></span>
            </div><br/>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-dark" /> | 
                <a asp-action="Index" class="btn btn-dark">Back to List</a>
            </div>
        </form>
    </div>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
